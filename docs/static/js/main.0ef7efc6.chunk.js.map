{"version":3,"sources":["views/serviceWorker.js","services/apiService.js","services/urlService.js","views/Content/Header/index.js","views/Content/Gallery/get-youtube-id.js","views/Content/Gallery/Media/index.js","views/Content/Tags/TagItems/index.js","views/Content/Gallery/Lightbox/index.js","views/Content/Gallery/index.js","views/Content/Pager/index.js","views/Content/Tags/index.js","index.js","views/Content/index.js"],"names":["Boolean","window","location","hostname","match","discordID","pathname","slice","api","process","PROJECT_DOMAIN","user","media","count","tags","request","link","plain","fetch","then","response","text","json","catch","console","error","getDiscordUserData","getMediaPages","a","pages","Math","ceil","getMedia","page","data","map","id","createdAt","Date","savedAt","getMonth","getDate","getFullYear","url","origin","queryParams","URLSearchParams","search","get","searchTags","tagsQuery","set","delete","params","toString","go","changePage","toPage","href","getTagsSearch","getPage","keys","split","Header","userInfo","useRef","header","useState","username","setUsername","avatar","setAvatar","loadUser","current","style","className","tag","avatarURL","useEffect","searchInput","input","value","document","onkeydown","key","includes","focus","ref","src","alt","onSubmit","e","preventDefault","target","firstChild","type","aria-label","placeholder","spellCheck","form","youTubeRegex","getYouTubeID","Media","setClicked","video","element","gfycatID","loop","preload","onMouseOver","play","onMouseLeave","pause","controls","onClick","controlsList","youTubeID","title","data-toggle","data-target","TagItems","data-dismiss","textContent","Lightbox","shown","setShown","content","MutationObserver","mutations","isShown","setTimeout","observe","attributes","attributeFilter","autoPlay","replace","frameBorder","allow","allowFullScreen","tabIndex","role","aria-labelledby","aria-hidden","rel","Gallery","clicked","Pager","parseInt","canBack","canNext","next","goToPage","disabled","Tags","setTags","loadTags","name","sort","b","localeCompare","reduce","array","concat","filter","i","indexOf","length","ReactDOM","render","setMedia","setPages","loadMedia","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0ef7efc6.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const discordID = window.location.pathname.slice(1);\r\nconst api = process.env.PROJECT_DOMAIN?\r\n  `https://${process.env.PROJECT_DOMAIN}.glitch.me/api` :\r\n  `http://localhost:7777/api`;\r\n\r\nconst user = `${api}/user/${discordID}`\r\nconst media = `${api}/media/${discordID}?limit=25`;\r\nconst count = `${api}/count/${discordID}?`;\r\nconst tags = `${api}/tags`;\r\n\r\nfunction request(link, plain)\r\n{\r\n  return fetch(link)\r\n    .then(response => !plain? response.json() : response.text())\r\n    .catch(console.error);\r\n}\r\n\r\nfunction getDiscordUserData()\r\n{\r\n  if(discordID === '')\r\n    return;\r\n\r\n  return request(user);\r\n}\r\n\r\nasync function getMediaPages(tags)\r\n{\r\n  let link = count;\r\n  if(tags)\r\n    link += `&tags=${tags}`;\r\n\r\n  const pages = await request(link, true);\r\n  return Math.ceil(pages / 25);\r\n}\r\n\r\nasync function getMedia(page = 1, tags)\r\n{\r\n  let link = media;\r\n  if(page)\r\n    link += `&page=${page}`;\r\n  if(tags)\r\n    link += `&tags=${tags}`;\r\n\r\n  let data = await request(link);\r\n  data = data.map(({ id, link, tags, createdAt }) =>\r\n  {\r\n    createdAt = new Date(createdAt);\r\n    const item =\r\n    {\r\n      id,\r\n      link,\r\n      tags,\r\n      savedAt: `${createdAt.getMonth() + 1}/${createdAt.getDate()}/`\r\n        + createdAt.getFullYear(),\r\n    };\r\n    return item;\r\n  });\r\n  return data;\r\n}\r\n\r\nfunction getTags()\r\n{\r\n  return request(tags);\r\n}\r\n\r\nfunction isPublic()\r\n{\r\n  return !discordID;\r\n}\r\n\r\nexport { getDiscordUserData, getMediaPages, getMedia, getTags, isPublic };\r\n","const url = window.location.origin + window.location.pathname;\r\nconst queryParams = new URLSearchParams(window.location.search);\r\nconst tags = queryParams.get('tags');\r\nconst page = queryParams.get('page');\r\n\r\nfunction searchTags(tagsQuery)\r\n{\r\n  if(!tagsQuery)\r\n    queryParams.delete('tags');\r\n  else\r\n    queryParams.set('tags', tagsQuery);\r\n  \r\n  queryParams.delete('page');\r\n\r\n  const params = queryParams.toString();\r\n  go(url + (!params? '' : `?${params}`));\r\n}\r\n\r\nfunction changePage(toPage)\r\n{\r\n  queryParams.set('page', toPage);\r\n  go(url + '?' + queryParams.toString());\r\n}\r\n\r\nfunction go(url)\r\n{\r\n  window.location.href = url;\r\n}\r\n\r\nfunction getTagsSearch()\r\n{\r\n  return tags || '';\r\n}\r\n\r\nfunction getPage()\r\n{\r\n  return page || 1;\r\n}\r\n\r\nexport { searchTags, changePage, getTagsSearch, getPage };\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport './Header.css';\r\n\r\nimport { getDiscordUserData } from '../../../services/apiService';\r\nimport { getTagsSearch, searchTags } from '../../../services/urlService';\r\n\r\n// all common keys\r\nconst keys = `\\`1234567890-=qwertyuiop[]\\\\asdfghjkl;'zxcvbnm,./ `.split('');\r\n\r\nfunction Header()\r\n{\r\n  /** @type {{ current: HTMLElement }} */\r\n  const userInfo = useRef();\r\n\r\n  /** @type {{ current: HTMLElement }} */\r\n  const header = useRef();\r\n  \r\n  // states for the username and avatar\r\n  const [ username, setUsername ] = useState();\r\n  const [ avatar, setAvatar ] = useState();\r\n  \r\n  // load the user's username and avatar\r\n  const loadUser = async () =>\r\n  {\r\n    const user = await getDiscordUserData();\r\n\r\n    // if there's no user, change the header's appearance\r\n    if(!user)\r\n    {\r\n      userInfo.current.style = 'display: none;';\r\n      header.current.className += ' justify-content-center';\r\n      return;\r\n    }\r\n\r\n    const { tag, avatarURL } = user;\r\n    setUsername(tag);\r\n    setAvatar(avatarURL);\r\n  }\r\n\r\n  // Load Discord usernamd and avatar on start\r\n  useEffect(() =>\r\n  {\r\n    loadUser();\r\n  }, []);\r\n\r\n  /** @type {{ current: HTMLInputElement }} */\r\n  const searchInput = useRef();\r\n\r\n  // initial side-effect for the search input\r\n  useEffect(() =>\r\n  {\r\n    const input = searchInput.current;\r\n    input.value = getTagsSearch();\r\n\r\n    // focus search input when user types\r\n    document.onkeydown = ({ key }) =>\r\n    {\r\n      if(keys.includes(key))\r\n        input.focus();\r\n    }\r\n  }, []);\r\n\r\n  // function to handle the onsubmit of the search bar\r\n  const onSubmit = e =>\r\n  {\r\n    e.preventDefault();\r\n    const tags = e.target.firstChild.firstChild.value;\r\n    searchTags(tags);\r\n  };\r\n\r\n  return (\r\n    <div className=\"header navbar navbar-expand sticky-top\">\r\n      <div className=\"user\" ref={userInfo}>\r\n        <img className=\"avatar\" src={avatar} alt=\"User Avatar\"></img>\r\n        <h1 className=\"username\">{username}</h1>\r\n      </div>\r\n      <div className=\"collapse navbar-collapse\" ref={header}>\r\n        <form className=\"form-inline\" id=\"search\" onSubmit={onSubmit}>\r\n          <div className=\"input-group\">\r\n            <input className=\"search-input form-control\"\r\n              type=\"search\" aria-label=\"Search\"\r\n              placeholder=\"Search by tag/s...\" spellCheck=\"false\"\r\n              ref={searchInput}></input>\r\n            <button className=\"btn search-icon\" form=\"search\">\r\n              <img src=\"search.svg\" alt=\"search icon\"/>\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport { Header };\r\n","// regex for getting YouTube video ID\r\n// eslint-disable-next-line\r\nconst youTubeRegex = /(?:youtube\\.com\\/(?:[^\\/]+\\/.+\\/|(?:v|e(?:mbed)?)\\/|.*[?&]v=)|youtu\\.be\\/)([^\"&?\\/ ]{11})/i;\r\n\r\nfunction getYouTubeID(url)\r\n{\r\n  const [ , youTubeID ] = url.match(youTubeRegex);\r\n  return youTubeID;\r\n}\r\n\r\nexport { getYouTubeID };\r\n","import React, { useRef } from 'react';\r\nimport './Media.css';\r\n\r\nimport { getYouTubeID } from '../get-youtube-id';\r\n\r\nfunction Media({ media, setClicked })\r\n{\r\n  let { link, /* tags */ } = media;\r\n\r\n  /** @type {{ current: HTMLVideoElement }} */\r\n  const video = useRef();\r\n  \r\n  // default element (`img` for images)\r\n  let element = <img className=\"media\" src={link} alt=\"media item\"/>;\r\n\r\n  // handle gfycat links\r\n  if(link.includes('gfycat.com') && !link.includes('.gif'))\r\n  {\r\n    const [ , gfycatID ] = link.match(/gfycat\\.com\\/(.+?)(?=$|[^a-z])/i);\r\n    element = \r\n      <>\r\n        <img className=\"gif\"\r\n          src=\"https://miro.medium.com/max/2048/1*aKQW5LeudHfno2eopICRBQ.png\"\r\n          alt=\"gfycat icon\"/>\r\n        <video className=\"media\" ref={video} loop preload=\"metadata\"\r\n          src={`https://thumbs.gfycat.com/${gfycatID}-mobile.mp4`}\r\n          onMouseOver={({ target }) => target.play()}\r\n          onMouseLeave={({ target }) => target.pause()}/>\r\n      </>\r\n  }\r\n\r\n  // handle video links\r\n  else if(link.match(/\\.mp4|\\.webm/i))\r\n    element = <video className=\"media\" src={link} controls preload=\"metadata\"\r\n      onClick={e => e.preventDefault()} controlsList=\"nofullscreen\"/>;\r\n\r\n  // handle youtube links\r\n  else if(link.match(/youtube\\.com|youtu\\.be/g))\r\n  {\r\n    const youTubeID = getYouTubeID(link);\r\n    \r\n    // change element to YouTube thumbnail image\r\n    element =\r\n      <div className=\"youtube\">\r\n        <img className=\"youtube-icon\" alt=\"youtube icon\" src=\"youtube.svg\"/>\r\n        <img className=\"media\" alt=\"media item\"\r\n          src={`https://i.ytimg.com/vi/${youTubeID}/hqdefault.jpg`}/>\r\n      </div>;\r\n  }\r\n\r\n  return (\r\n    <div className={\"media-container\"/*  + (filtered? \" filtered\" : \"\") */}\r\n      title=\"Click to enlarge\"\r\n      onClick={() =>\r\n      {\r\n        if(video.current)\r\n          video.current.pause();\r\n        setClicked(media);\r\n      }} data-toggle=\"modal\" data-target=\"#lightbox-modal\">\r\n      {element}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport { Media };\r\n","import React from 'react';\r\nimport './TagItems.css';\r\n\r\nimport { searchTags } from '../../../../services/urlService';\r\n\r\n// `tags` are the array of tags\r\nfunction TagItems({ tags })\r\n{\r\n  if(!tags)\r\n    return <></>;\r\n\r\n  return tags.map(tag =>\r\n    <div className=\"tag clickable\"\r\n      data-dismiss=\"modal\" key={tag}\r\n      onClick={({ target }) =>\r\n      {\r\n        searchTags(target.textContent);\r\n      }}>\r\n      {tag}\r\n    </div>)\r\n}\r\n\r\nexport { TagItems }\r\n","import React, { useState, useRef, useEffect } from 'react';\r\nimport './Lightbox.css';\r\n\r\nimport { TagItems } from '../../Tags/TagItems';\r\nimport { getYouTubeID } from '../../Gallery/get-youtube-id';\r\n\r\nfunction Lightbox({ media })\r\n{\r\n  const [ shown, setShown ] = useState(false);\r\n\r\n  /** @type {{ current: HTMLElement }} */\r\n  const content = useRef();\r\n\r\n  // side-effect for checking for modal open and close\r\n  // if `shown` is true, the media element is rendered and not if it's `false`\r\n  useEffect(() =>\r\n  {\r\n    if(content.current)\r\n    {\r\n      const observer = new MutationObserver(mutations =>\r\n      {\r\n        // eslint-disable-next-line\r\n        for(const { target } of mutations)\r\n        {\r\n          const isShown = target.className.includes('show');\r\n          if(isShown)\r\n            return setShown(isShown);\r\n\r\n          setTimeout(() => setShown(isShown), 200);\r\n        }\r\n      });\r\n\r\n      observer.observe(content.current,\r\n        { attributes: true, attributeFilter: [ 'class' ] });\r\n    }\r\n  }, [ content ] );\r\n\r\n  let id = media? media.id : '';\r\n  let link = media? media.link : '';\r\n  let tags = media? media.tags : [];\r\n  let savedAt = media? media.savedAt : '';\r\n\r\n  // default element (`img` for images)\r\n  let element = <img className=\"media\" src={link} alt=\"test lightbox\"/>;\r\n\r\n  // handle gfycat links\r\n  if(link.includes('gfycat.com') && !link.includes('.gif'))\r\n  {\r\n    element = <video className=\"media\" autoPlay loop preload=\"metadata\"\r\n      src={link}/>;\r\n\r\n    // change the mp4 gfycat link to the original\r\n    link = link.replace('giant.', '').replace('.mp4', '');\r\n  }\r\n\r\n  // handle mp4 video links\r\n  else if(link.match(/\\.mp4|\\.webm/i))\r\n    element = <video className=\"media\" src={link} preload=\"metadata\" controls/>;\r\n\r\n  // handle youtube links\r\n  else if(link.match(/youtube\\.com|youtu\\.be/g))\r\n  {\r\n    const youTubeID = getYouTubeID(link);\r\n    element =\r\n      <div className=\"media\">\r\n        <iframe title=\"youtube\" frameBorder=\"0\"\r\n          src={`https://www.youtube.com/embed/${youTubeID}`}\r\n          allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\r\n          allowFullScreen></iframe>\r\n      </div>;\r\n  }\r\n  \r\n  return (\r\n    <div className=\"modal fade lightbox\" id=\"lightbox-modal\" tabIndex=\"-1\"\r\n      role=\"dialog\" aria-labelledby=\"lightbox modal\" aria-hidden=\"true\"\r\n      ref={content}>\r\n      <button type=\"button\" className=\"close\"\r\n        data-dismiss=\"modal\" aria-label=\"Close\">\r\n        <span aria-hidden=\"true\">&times;</span>\r\n      </button>\r\n      <div className=\"modal-dialog\" role=\"document\">\r\n        <div className=\"modal-content\">\r\n          <div className=\"modal-body\">\r\n            {shown? element : <></>}\r\n            <div className=\"lightbox-info scrollable\">\r\n              <div className=\"lightbox-info-section text-truncate\">\r\n                Tags\r\n              </div>\r\n              <hr></hr>\r\n              <div className=\"tags\">\r\n                <TagItems tags={tags}/>\r\n              </div>\r\n              <hr></hr>\r\n              <div className=\"lightbox-info-section\">\r\n                Link <a className=\"text-truncate\" rel=\"noopener noreferrer\"\r\n                  href={link} target=\"_blank\">{link}</a>\r\n              </div>\r\n              <hr></hr>\r\n              <div className=\"lightbox-info-section footer id\">\r\n                ID: {id}\r\n              </div>\r\n              <div className=\"lightbox-info-section footer saved-date\">\r\n                saved at {savedAt}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport { Lightbox };\r\n","import React, { useState } from 'react';\r\nimport './Gallery.css';\r\n\r\nimport { Media } from './Media';\r\nimport { Lightbox } from './Lightbox';\r\n\r\n// `media` is the media loaded from the backend\r\nfunction Gallery({ media })\r\n{\r\n  // media to be shown in lightbox\r\n  const [ clicked, setClicked ] = useState();\r\n\r\n  return (\r\n    <div className=\"gallery\">\r\n      <Lightbox media={clicked}/>\r\n      {\r\n        !media? null : media.map(media =>\r\n          <Media key={`${media.id}-${media.link}`} media={media}\r\n            setClicked={setClicked}/>)\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport { Gallery };\r\n","import React from 'react';\r\nimport './Pager.css';\r\n\r\nimport { getPage, changePage as goToPage } from '../../../services/urlService';\r\n\r\n// `pages` is the number of pages of the media loaded from the backend\r\nfunction Pager({ pages })\r\n{\r\n  if(!pages || pages === 1)\r\n    return <div className=\"pager\"></div>;\r\n\r\n  // the page query parameter from the URL\r\n  const page = parseInt(getPage());\r\n  const canBack = page > 1;\r\n  const canNext = page < pages;\r\n\r\n  // function for handling changing pages\r\n  const changePage = (next = true) =>\r\n  {\r\n    const toPage = page + (next?\r\n      (canNext? 1 : page) :\r\n      (canBack? -1 : page));\r\n    goToPage(toPage);\r\n  };\r\n\r\n  return (\r\n    <div className=\"pager\">\r\n      <button className={!canBack? \"disabled\" : \"\"}\r\n        {...(!canBack? { disabled: true } : {})}\r\n        onClick={() => changePage(false)}>\r\n        <img src=\"back.svg\" alt=\"back\"/>\r\n      </button>\r\n      {page} / {pages}\r\n      <button className={!canNext? \"disabled\" : \"\"}\r\n        {...(!canNext? { disabled: true } : {})}\r\n        onClick={() => changePage()}>\r\n        <img src=\"forward.svg\" alt=\"forward\"/>\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport { Pager };\r\n","import React, { useState, useEffect } from 'react';\r\nimport './Tags.css';\r\n\r\nimport { TagItems } from './TagItems';\r\nimport { getTags, isPublic } from '../../../services/apiService';\r\n\r\n// `media` is the media loaded from the backend\r\nfunction Tags({ media })\r\n{\r\n  // `tags` is all the tags of the media loaded\r\n  const [ tags, setTags ] = useState([]);\r\n\r\n  const loadTags = async () =>\r\n  {\r\n    const tags = await getTags();\r\n    setTags(tags\r\n      .map(({ name }) => name)\r\n      .sort((a, b) => a.localeCompare(b)));\r\n  }\r\n\r\n  // side-effect for checking updates to the media loaded\r\n  useEffect(() =>\r\n  {\r\n    if(isPublic())\r\n      loadTags();\r\n    else\r\n    {\r\n      if(media)\r\n        setTags(media\r\n          .reduce((array, { tags }) => array.concat(tags), [])\r\n          .filter((tag, i, tags) => tags.indexOf(tag) === i)\r\n          .sort((a, b) => a.localeCompare(b)));\r\n    }\r\n  }, [ media ]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"tags-button\" data-toggle=\"modal\" data-target=\"#tags-modal\">\r\n        <img src=\"tags.svg\" alt=\"tags icon\"/>\r\n      </div>\r\n      <div className=\"modal fade\" id=\"tags-modal\" tabIndex=\"-1\" role=\"dialog\">\r\n        <div className=\"modal-dialog\" role=\"document\">\r\n          <div className=\"modal-content tags\">\r\n            <div className=\"modal-header\">\r\n              <h5 className=\"modal-title\">All Tags ({tags.length})</h5>\r\n              <button type=\"button\" className=\"close\"\r\n                data-dismiss=\"modal\" aria-label=\"Close\">\r\n                <span aria-hidden=\"true\">&times;</span>\r\n              </button>\r\n            </div>\r\n            <div className=\"modal-body scrollable\">\r\n              <TagItems tags={tags}/>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport { Tags };\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './views/serviceWorker';\nimport { Content } from './views/Content';\n\nReactDOM.render(<Content/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { useState, useEffect } from 'react';\nimport './Content.css';\n\nimport { Header } from './Header';\nimport { Gallery } from './Gallery';\nimport { Pager } from './Pager';\nimport { Tags } from './Tags';\n\nimport { getMedia, getMediaPages } from '../../services/apiService';\nimport { getTagsSearch, getPage } from '../../services/urlService';\n\nfunction Content()\n{\n  // array of media\n  const [ media, setMedia ] = useState();\n\n  // pagination\n  const [ pages, setPages ] = useState();\n\n  // Get media from service and load\n  const loadMedia = async () =>\n  {\n    const tags = getTagsSearch();\n    const page = getPage();\n\n    const pages = await getMediaPages(tags);\n    setPages(pages);\n    \n    const media = await getMedia(page, tags);\n    setMedia(media);\n  }\n  \n  // Load pages and media at start\n  useEffect(() =>\n  {\n    loadMedia();\n  }, [ setMedia ]);\n\n  return (\n    <div>\n      <Header/>\n      <Gallery media={media}/>\n      <Pager media={media} pages={pages}/>\n      <Tags media={media}/>\n    </div>\n  );\n}\n\nexport { Content };\n"],"sourceRoot":""}